<!DOCTYPE html>
<html lang="en" media="screen">
	<head>
		 <meta name="viewport" content="width=device-width, initial-scale=1.0">
		 <title> Sprout </title>


		 <!--CSS-->
		<!--STYLESHEET CSS-->
		<link rel="stylesheet" href="/assets/user.scss.css">
		<!--GOOGLE MAP JS AUTOFILL CSS-->
		<link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">


		<!--CSS BOOTSTRAP-->
		<!-- Latest compiled and minified CSS -->
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
		<!-- Optional theme -->
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous">
		<!-- Latest compiled and minified JavaScript -->
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
		<!--CSS W3 SCHOOLS-->
		<link rel="stylesheet" href="http://www.w3schools.com/lib/w3.css">
		<!--GOOGLE FONTS-->
		<link href='https://fonts.googleapis.com/css?family=Raleway:100' rel='stylesheet' type='text/css'>

		<!--API KEYS-->
		<!--JQUERY LIBRARY CALL-->
		<script src="https://code.jquery.com/jquery-2.1.3.min.js"></script>
		<!--GMAIL SIGN-IN CALL-->
		<script src="https://apis.google.com/js/platform.js" async defer>
		</script>
		<!--GMAIL CLIENT ID-->
		<meta name="google-signin-scope" content="profile email">
		<meta name="google-signin-client_id" content="123994681641-6q5qoage466aob7ul4uef8sidfov02vv.apps.googleusercontent.com">
		<!--GOOGLE MAPS JS AUTOFILL API-->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBq3UHdNNgslxsVag-WHL-YJHYzJ0kwrjk&libraries=places&callback=initAutocomplete"
        async defer></script>


		<!--JS FUNCTIONS-->
		<!--GMAIL SIGN-IN JS BUTTON-->
		<script>
			function onSignIn(googleUser) {
				// Useful data for your client-side scripts:
				var profile = googleUser.getBasicProfile();
				console.log("ID: " + profile.getId()); // Don't send this directly to your server!
				console.log('Full Name: ' + profile.getName());
				console.log('Given Name: ' + profile.getGivenName());
				console.log('Family Name: ' + profile.getFamilyName());
				console.log("Image URL: " + profile.getImageUrl());
				console.log("Email: " + profile.getEmail());

				// The ID token you need to pass to your backend:
				var id_token = googleUser.getAuthResponse().id_token;
				console.log("ID Token: " + id_token);

				//VERIFYING THAT TOKEN ID IS VALID
				$.get("https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=" + id_token, 
					function(res){
						if (res.aud == "123994681641-6q5qoage466aob7ul4uef8sidfov02vv.apps.googleusercontent.com") {
							console.log(res.aud);
						}
						else {
							console.log("Incorrect Token ID");
						}
				}, "json");
			};
		</script>
		<!--GMAIL SIGN-OUT JS BUTTON-->
		<script>
			function signOut() {
				var auth2 = gapi.auth2.getAuthInstance();
				auth2.signOut().then(function () {
					console.log('User signed out.');
				});
			}
		</script>
		<!--FACEBOOK SIGN-IN JS BUTTON-->
		<script>
			// This is called with the results from from FB.getLoginStatus().
			function statusChangeCallback(response) {
				console.log('statusChangeCallback');
				console.log(response);
				// The response object is returned with a status field that lets the
				// app know the current login status of the person.
				// Full docs on the response object can be found in the documentation
				// for FB.getLoginStatus().
				if (response.status === 'connected') {
					// Logged into your app and Facebook.
					testAPI();
				} else if (response.status === 'not_authorized') {
					// The person is logged into Facebook, but not your app.
					console.log('User logged into Facebook, but not your app');
				} else {
					// The person is not logged into Facebook, so we're not sure if
					// they are logged into this app or not.
					console.log('User needs to login to Facebook');
				}
			}

			// This function is called when someone finishes with the Login
			// Button.  See the onlogin handler attached to it in the sample
			// code below.
			function checkLoginState() {
				FB.getLoginStatus(function(response) {
					statusChangeCallback(response);
				});
			}

			window.fbAsyncInit = function() {
			FB.init({
				appId      : '545145138996339',
				cookie     : true,  // enable cookies to allow the server to access 
														// the session
				xfbml      : true,  // parse social plugins on this page
				version    : 'v2.5' // use graph api version 2.5
			});

			// Now that we've initialized the JavaScript SDK, we call 
			// FB.getLoginStatus().  This function gets the state of the
			// person visiting this page and can return one of three states to
			// the callback you provide.  They can be:
			//
			// 1. Logged into your app ('connected')
			// 2. Logged into Facebook, but not your app ('not_authorized')
			// 3. Not logged into Facebook and can't tell if they are logged into
			//    your app or not.
			//
			// These three cases are handled in the callback function.

			FB.getLoginStatus(function(response) {
				statusChangeCallback(response);
			});

			};

			// Load the SDK asynchronously
			( function(d, s, id) {
					var js, fjs = d.getElementsByTagName(s)[0];
					
					if (d.getElementById(id)) return;
						js = d.createElement(s); js.id = id;
						js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.6";
						fjs.parentNode.insertBefore(js, fjs);
					}
					(document, 'script', 'facebook-jssdk')
				);

			// Here we run a very simple test of the Graph API after login is
			// successful.  See statusChangeCallback() for when this call is made.
			function testAPI() {
				console.log('Welcome!  Fetching your information.... ');
				FB.api('/me', function(response) {
					console.log('Successful login for: ' + response.name);
					document.getElementById('status').innerHTML =
						'Thanks for logging in, ' + response.name + '!';
				});
			}
		</script>
		<!--GOOGLE ADDRESS AUTOFILL FORM FIELD-->
		<script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            console.log("User lat: " + geolocation.lat);
            console.log("User lng: " + geolocation.lng);
          });
        }
      }
    </script>
	</head>

	<body>
		<div id="container">
			<div id="header">
				<ul class="nav nav-pills nav-align-left">
					<li>
						<!--FACEBOOK SIGN-IN BUTTON-->
						<fb:login-button scope="public_profile,email,user_location,user_about_me,user_hometown " onClick="checkLoginState()" data-size="xlarge", data-auto-logout-link="true">
						</fb:login-button>
						<div id="fb-root"></div>
					</li>
					<li>
						<!--GMAIL SIGN-IN BUTTON-->
						<div class="g-signin2" data-onsuccess="onSignIn"></div>
					</li>
				</ul>

				<form class="form-horizontal" action='/user_dashboard'>
					<input name="authenticity_token" value="<%= form_authenticity_token %>" type="hidden">
					<input class="btn btn-primary" type='submit' value='Dashboard' />
				</form>
			</div>

			<div id="top-body">
				<div class="w3-hover-shadow w3-center">
					<form>
						<div class="w3-row-padding">
							<div class="w3-third">
								<input class="w3-input w3-border" type="text" placeholder="Where are you going?">
							</div>
							<div class="w3-third">
								<input class="w3-input w3-border" type="text" placeholder="What do you want to do?">
							</div>
						</div>
						<button class="w3-btn w3-blue">Register</button>
					</form>
				</div>
				<hr>
			</div>

			<div id="middle-body">
				<h1 class="google-font"> Nearby Meet-ups </h1>
				<div class="city-container" >
					<h3 class="google-font"> San Francisco </h3>
					<img class="w3-card-12 w3-green w3-hover-shadow w3-center" src="/assets/sf.jpg" alt="NO IMAGE">
				</div>

				<div class="city-container">
					<h3 class="google-font"> Miami </h3>
					<img class="w3-card-12 w3-green w3-hover-shadow w3-center" src="/assets/miami.jpg" alt="NO IMAGE">
				</div>

				<div class="city-container">
					<h3 class="google-font"> Los Angeles </h3>
					<img class="w3-card-12 w3-green w3-hover-shadow w3-center" src="/assets/la.jpg" alt="NO IMAGE">
				</div>
			</div>

			<div id="last-body">
				<h1 class="google-font"> Explore </h1>
				<div class="city-container"> 
					<h3 class="google-font"> New York City </h3>
					<img class="w3-card-12 w3-green w3-hover-shadow w3-center" src="/assets/nyc.jpg" alt="NO IMAGE">
				</div>

				<div class="city-container">
					<h3 class="google-font"> London </h3>
					<img class="w3-card-12 w3-green w3-hover-shadow w3-center" src="/assets/london.jpg" alt="NO IMAGE">
				</div>

				<div class="city-container">
					<h3 class="google-font"> Tokyo </h3>
					<img class="w3-card-12 w3-green w3-hover-shadow w3-center" src="/assets/tokyo.jpg" alt="NO IMAGE">
				</div>
			</div>

			<div id="contact-us">
			</div>

	  </div>
	</body>
</html>




<!--<input name="authenticity_token" value="<%= form_authenticity_token %>" type="hidden">-->